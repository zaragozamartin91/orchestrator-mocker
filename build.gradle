group 'ast.mock.orchestrator'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        maven {
            url "http://jcenter.bintray.com"
        }
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.5.4"
    }
}
apply plugin: "com.jfrog.artifactory"


def ARTIFACTORY_BASE_URL = 'http://srvcs-desa:8089/artifactory'
def ARTIFACTORY_USERNAME = 'admin'
def ARTIFACTORY_PASSWORD = 'password'

/* Configuro artifactory para la resolucion de dependencias y para el deploy de artefactos */
artifactory {
    contextUrl = ARTIFACTORY_BASE_URL
    //The base Artifactory URL if not overridden by the publisher/resolver

    publish {
        contextUrl = ARTIFACTORY_BASE_URL   //The base Artifactory URL for the publisher
        //A closure defining publishing information
        repository {
            repoKey = 'ext-snapshot-local'   //The Artifactory repository key to publish to
            username = ARTIFACTORY_USERNAME           //The publisher user name
            password = ARTIFACTORY_PASSWORD          //The publisher password
            maven = true
        }

    }

    resolve {
        contextUrl = ARTIFACTORY_BASE_URL   //The base Artifactory URL for the resolver
        repository {
            repoKey = 'libs-release'
            username = ARTIFACTORY_USERNAME          //Optional resolver user name (leave out to use anonymous resolution)
            password = ARTIFACTORY_PASSWORD       //The resolver password
            maven = true                //Resolve Maven-style artifacts and descriptors (true by default)
        }
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'

//task wrapper(type: Wrapper) {
//    gradleVersion = '4.2.1'
//}

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    maven {
        credentials {
            username = ARTIFACTORY_USERNAME
            password = ARTIFACTORY_PASSWORD
        }
        url "${ARTIFACTORY_BASE_URL}/libs-release"
    }

//    maven {
//        url "http://jcenter.bintray.com"
//    }

    mavenLocal()

}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile 'org.mockito:mockito-core:2.8.47'
//    compile 'com.cobiscorp.cobis:cobis-commons:1.0.2'
//    compile 'com.cobiscorp.cobis.cis:sp-java-orchestration-base-simple:1.0.0'
//    compile 'ast.csp.orchestration:ast-csp-orchestration-base:2.0.0'
//    compile 'com.cobiscorp.cobis.cts:cts-commons:1.0.7'

    compile 'com.cobiscorp.cobis:cobis-commons:1.0.1'
    compile 'com.cobiscorp.cobis.cts:cts-commons:1.0.7'
    compile 'com.cobiscorp.cobis.csp:csp-commons:1.0.3'
    compile 'com.cobiscorp.cobis.cts:cts-services:1.0.6'
    compile 'dom4j:dom4j:1.6.1'
    compile 'cobis:cobis-crypt-api:1.0.0'
    compile 'cobis:cobis-crypt-impl:1.0.0'
    compile 'cobis:cobis-crypt-native:1.0.0'
    compile 'ast.csp.orchestration:ast-csp-orchestration-base:2.0.0'

//    compile 'com.cobiscorp.cobis.cis:sp-java-orchestration-base-simple:1.0.0'

    /* Se eliminan las dependencias transitivas para esta dependencia dado que la misma depende de una version
     * de cobis-commons que no se encuentra (1.0.3) */
    compile('com.cobiscorp.cobis.cis:sp-java-orchestration-base-simple:1.0.0') {
        transitive = false
    }


}

/* Defino un task para crear un jar que contenga el codigo fuente */
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

/* Configuro la publicacion de los componentes en artifactory */
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

artifactoryPublish {
    skip = false //Skip build info analysis and publishing (false by default)
    contextUrl = ARTIFACTORY_BASE_URL

    publications('mavenJava')

    clientConfig.publisher.repoKey = 'ext-snapshot-local'
    clientConfig.publisher.username = ARTIFACTORY_USERNAME
    clientConfig.publisher.password = ARTIFACTORY_PASSWORD


}

jar.dependsOn(sourceJar)

artifactoryPublish.dependsOn(jar)


